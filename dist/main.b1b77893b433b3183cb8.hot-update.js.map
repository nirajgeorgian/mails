{"version":3,"sources":["webpack:///./src/server.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qDAA4B;AAC5B,wDAA8B;AAE9B,wJAAoG;AACpG,yIAA8F;AAE9F,MAAM,GAAG,GAAG,KAAK,CAAC,cAAc,CAAC;AACjC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI;AAErC,MAAM,uBAAuB,GAAG,CAC/B,IAAkD,EAClD,QAA6C,EAC5C,EAAE;IACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IACpC,MAAM,UAAU,GAAG,IAAI,iCAAe,EAAE;IACxC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC;IAE1B,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC;AAC3B,CAAC;AAED,MAAM,WAAW,GAAG,GAAG,EAAE;IACxB,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE;IAEhC,MAAM,CAAC,UAAU,CAAC,0CAAmB,EAAE;QACtC,uBAAuB;KACvB,CAAC;IACF,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;IACzE,MAAM,CAAC,KAAK,EAAE;IAEd,GAAG,CAAC,+CAA+C,IAAI,EAAE,CAAC;AAC3D,CAAC;AACD,WAAW,EAAE;AAEb,OAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,GAAG,EAAE,EAAE;IACvC,GAAG,CAAC,uCAAuC,GAAG,EAAE,CAAC;IACjD,OAAO,CAAC,IAAI,EAAE;AACf,CAAC,CAAC;AAEF,OAAO,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,GAAG,EAAE,EAAE;IACxC,GAAG,CAAC,wCAAwC,GAAG,EAAE,CAAC;IAClD,OAAO,CAAC,IAAI,EAAE;AACf,CAAC,CAAC","file":"main.b1b77893b433b3183cb8.hot-update.js","sourcesContent":["import * as grpc from 'grpc'\nimport * as debug from 'debug'\n\nimport { MailsServiceService, IMailsServiceServer } from './proto/mail/service/mail_service_grpc_pb'\nimport { AccountConfirmationReq, ConfirmationRes } from './proto/mail/service/mail_service_pb'\n\nconst log = debug('SampleServer')\nconst PORT = process.env.PORT || 3002\n\nconst sendAccountConfirmation = (\n\tcall: grpc.ServerUnaryCall<AccountConfirmationReq>,\n\tcallback: grpc.sendUnaryData<ConfirmationRes>\n) => {\n\tconsole.log(call.request.toObject())\n\tconst confirmRes = new ConfirmationRes()\n\tconfirmRes.setStatus(true)\n\n\tcallback(null, confirmRes)\n}\n\nconst startServer = () => {\n\tconst server = new grpc.Server()\n\n\tserver.addService(MailsServiceService, {\n\t\tsendAccountConfirmation\n\t})\n\tserver.bind('127.0.0.1:' + PORT, grpc.ServerCredentials.createInsecure())\n\tserver.start()\n\n\tlog(`Server started, listening: http://localhost:${PORT}`)\n}\nstartServer()\n\nprocess.on('uncaughtException', (err) => {\n\tlog(`process on uncaughtException error: ${err}`)\n\tprocess.exit()\n})\n\nprocess.on('unhandledRejection', (err) => {\n\tlog(`process on unhandledRejection error: ${err}`)\n\tprocess.exit()\n})\n"],"sourceRoot":""}